version: "3.4"

services:
  broker:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - redisdata:/data

  db:
    image: docker.io/library/postgres:13
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=paperless
      - POSTGRES_USER=paperless
      - POSTGRES_PASSWORD=paperless

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - db
      - broker
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - data:/usr/src/paperless/data
      - media:/usr/src/paperless/media
      - ./export:/usr/src/paperless/export
      - ./consume:/usr/src/paperless/consume
    env_file: paperless.env
    environment:
      - PAPERLESS_REDIS=redis://broker:6379
      - PAPERLESS_DBHOST=db
      - PAPERLESS_URL=${PAPERLESS_URL}
      - PAPERLESS_SECRET_KEY=${PAPERLESS_SECRET_KEY}

  proxy:
    image: nginx:latest
    ports:
      - "80:80"
      - "${PORT:-443}:443"
    restart: unless-stopped
    depends_on:
      - webserver
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/conf.d/nginx.conf.template:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    environment:
      NGINX_SERVER_NAME: ${SERVER_NAME}
    command: /bin/bash -c "envsubst '$$NGINX_SERVER_NAME' < /etc/nginx/conf.d/nginx.conf.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
  
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
  
  duckdns:
    image: lscr.io/linuxserver/duckdns:latest
    environment:
      - SUBDOMAINS=${SUBDOMAINS}
      - TOKEN=${TOKEN}
      - LOG_FILE=false
    restart: unless-stopped
  
  ftpd_server:
    image: stilliard/pure-ftpd
    ports:
      - "${FTP_CONTROL_PORT:-21}:21"
      - "${FTP_PORTS:-30}000-${FTP_PORTS:-30}009:30000-30009"
    volumes: 
      - ./consume:/home/${FTP_USER_NAME}/
    environment:
      - ADDED_FLAGS=-d -d
      - PUBLICHOST=${PUBLICHOST}
      - FTP_USER_NAME=${FTP_USER_NAME}
      - FTP_USER_PASS=${FTP_USER_PASS}
      - FTP_USER_HOME=/home/${FTP_USER_NAME}
    restart: unless-stopped


volumes:
  data:
  media:
  pgdata:
  redisdata:

